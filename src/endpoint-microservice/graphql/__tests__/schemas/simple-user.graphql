type Query {
  users(data: GetusersInput): usersConnection!
}

type usersConnection {
  edges: [usersEdge!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type usersEdge {
  node: users!
  cursor: String!
}

type users {
  versionId: String!
  id: String!
  createdAt: DataTime!
  data: Datausers!
}

scalar DataTime

type Datausers {
  name: String!
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

input GetusersInput {
  first: Float
  after: String
}
