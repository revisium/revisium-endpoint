scalar DataTime

scalar JSON

input ProjectGetUsersInput {
  after: String
  first: Float
  orderBy: [ProjectGetUsersOrderByInput]
}

enum ProjectGetUsersOrderByField {
  createdAt
  id
  updatedAt
}

input ProjectGetUsersOrderByInput {
  direction: ProjectSortOrder!
  field: ProjectGetUsersOrderByField!
}

type ProjectPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

enum ProjectSortOrder {
  asc
  desc
}

type ProjectUser {
  name: String!
}

type ProjectUserConnection {
  edges: [ProjectUserEdge!]!
  pageInfo: ProjectPageInfo!
  totalCount: Int!
}

type ProjectUserEdge {
  cursor: String!
  node: ProjectUserNode!
}

type ProjectUserFlat {
  name: String!
}

type ProjectUserNode {
  createdAt: DataTime!
  createdId: String!
  data: ProjectUser!
  id: String!
  json: JSON
  updatedAt: DataTime!
  versionId: String!
}

type Query {
  _service: _Service
  user(id: String!): ProjectUserNode!
  userFlat(id: String!): ProjectUserFlat!
  users(data: ProjectGetUsersInput): ProjectUserConnection!
}

type _Service {
  sdl: String
}