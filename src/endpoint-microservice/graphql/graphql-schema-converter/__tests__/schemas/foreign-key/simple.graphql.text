scalar DataTime

scalar JSON

input ProjectGetPostsInput {
  after: String
  first: Float
}

input ProjectGetUsersInput {
  after: String
  first: Float
}

type ProjectPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type ProjectPost {
  name: String!
}

type ProjectPostConnection {
  edges: [ProjectPostEdge!]!
  pageInfo: ProjectPageInfo!
  totalCount: Int!
}

type ProjectPostEdge {
  cursor: String!
  node: ProjectPostNode!
}

type ProjectPostFlat {
  name: String!
}

type ProjectPostNode {
  createdAt: DataTime!
  createdId: String!
  data: ProjectPost!
  id: String!
  json: JSON
  updatedAt: DataTime!
  versionId: String!
}

type ProjectUser {
  post: ProjectPostNode!
}

type ProjectUserConnection {
  edges: [ProjectUserEdge!]!
  pageInfo: ProjectPageInfo!
  totalCount: Int!
}

type ProjectUserEdge {
  cursor: String!
  node: ProjectUserNode!
}

type ProjectUserFlat {
  post: ProjectPostFlat!
}

type ProjectUserNode {
  createdAt: DataTime!
  createdId: String!
  data: ProjectUser!
  id: String!
  json: JSON
  updatedAt: DataTime!
  versionId: String!
}

type Query {
  _service: _Service
  post(id: String!): ProjectPostNode!
  postFlat(id: String!): ProjectPostFlat!
  posts(data: ProjectGetPostsInput): ProjectPostConnection!
  user(id: String!): ProjectUserNode!
  userFlat(id: String!): ProjectUserFlat!
  users(data: ProjectGetUsersInput): ProjectUserConnection!
}

type _Service {
  sdl: String
}