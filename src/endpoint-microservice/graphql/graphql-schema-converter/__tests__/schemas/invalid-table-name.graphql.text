type DataINVALID_TABLE_NAME____user {
  name: String!
}

scalar DataTime

input GetINVALID_TABLE_NAME____userInput {
  after: String
  first: Float
}

type INVALID_TABLE_NAME____user {
  createdAt: DataTime!
  data: DataINVALID_TABLE_NAME____user!
  id: String!
  versionId: String!
}

type INVALID_TABLE_NAME____userConnection {
  edges: [INVALID_TABLE_NAME____userEdge!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type INVALID_TABLE_NAME____userEdge {
  cursor: String!
  node: INVALID_TABLE_NAME____user!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  INVALID_TABLE_NAME____user(data: GetINVALID_TABLE_NAME____userInput): INVALID_TABLE_NAME____userConnection!
  _service: _Service
}

type _Service {
  sdl: String
}