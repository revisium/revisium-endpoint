scalar DataTime

scalar JSON

input ProjectGetUsERsInput {
  after: String
  first: Float
}

input ProjectGetuSersInput {
  after: String
  first: Float
}

type ProjectPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type ProjectUsER {
  name: String!
}

type ProjectUsERsConnection {
  edges: [ProjectUsERsEdge!]!
  pageInfo: ProjectPageInfo!
  totalCount: Int!
}

type ProjectUsERsEdge {
  cursor: String!
  node: ProjectUsERsNode!
}

type ProjectUsERsNode {
  createdAt: DataTime!
  createdId: String!
  data: ProjectUsER!
  id: String!
  json: JSON
  updatedAt: DataTime!
  versionId: String!
}

type ProjectuSer {
  name: String!
}

type ProjectuSersConnection {
  edges: [ProjectuSersEdge!]!
  pageInfo: ProjectPageInfo!
  totalCount: Int!
}

type ProjectuSersEdge {
  cursor: String!
  node: ProjectuSersNode!
}

type ProjectuSersNode {
  createdAt: DataTime!
  createdId: String!
  data: ProjectuSer!
  id: String!
  json: JSON
  updatedAt: DataTime!
  versionId: String!
}

type Query {
  UsER(id: String!): ProjectUsERsNode!
  UsERFlat(id: String!): ProjectUsER!
  UsERs(data: ProjectGetUsERsInput): ProjectUsERsConnection!
  _service: _Service
  uSer(id: String!): ProjectuSersNode!
  uSerFlat(id: String!): ProjectuSer!
  uSers(data: ProjectGetuSersInput): ProjectuSersConnection!
}

type _Service {
  sdl: String
}