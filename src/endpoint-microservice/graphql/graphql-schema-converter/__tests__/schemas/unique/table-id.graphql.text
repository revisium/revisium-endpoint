scalar DataTime

scalar JSON

input ProjectGetUsERsInput {
  after: String
  first: Float
}

input ProjectGetuSersInput {
  after: String
  first: Float
}

type ProjectPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type ProjectUsER {
  name: String!
}

type ProjectUsERConnection {
  edges: [ProjectUsEREdge!]!
  pageInfo: ProjectPageInfo!
  totalCount: Int!
}

type ProjectUsEREdge {
  cursor: String!
  node: ProjectUsERNode!
}

type ProjectUsERFlat {
  name: String!
}

type ProjectUsERNode {
  createdAt: DataTime!
  createdId: String!
  data: ProjectUsER!
  id: String!
  json: JSON
  updatedAt: DataTime!
  versionId: String!
}

type ProjectuSer {
  name: String!
}

type ProjectuSerConnection {
  edges: [ProjectuSerEdge!]!
  pageInfo: ProjectPageInfo!
  totalCount: Int!
}

type ProjectuSerEdge {
  cursor: String!
  node: ProjectuSerNode!
}

type ProjectuSerFlat {
  name: String!
}

type ProjectuSerNode {
  createdAt: DataTime!
  createdId: String!
  data: ProjectuSer!
  id: String!
  json: JSON
  updatedAt: DataTime!
  versionId: String!
}

type Query {
  UsER(id: String!): ProjectUsERNode!
  UsERFlat(id: String!): ProjectUsERFlat!
  UsERs(data: ProjectGetUsERsInput): ProjectUsERConnection!
  _service: _Service
  uSer(id: String!): ProjectuSerNode!
  uSerFlat(id: String!): ProjectuSerFlat!
  uSers(data: ProjectGetuSersInput): ProjectuSerConnection!
}

type _Service {
  sdl: String
}