"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input INVALID_PROJECT_NAME_1BoolFilter {
  equals: Boolean
  not: Boolean
}

input INVALID_PROJECT_NAME_1DateTimeFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  notIn: [String!]
}

enum INVALID_PROJECT_NAME_1FilterJsonMode {
  default
  insensitive
}

enum INVALID_PROJECT_NAME_1FilterStringMode {
  default
  insensitive
}

input INVALID_PROJECT_NAME_1GetUsersInput {
  after: String
  first: Int
  orderBy: [INVALID_PROJECT_NAME_1GetUsersOrderByInput!]
  where: INVALID_PROJECT_NAME_1UsersWhereInput
}

enum INVALID_PROJECT_NAME_1GetUsersOrderByField {
  createdAt
  id
  publishedAt
  updatedAt
}

input INVALID_PROJECT_NAME_1GetUsersOrderByInput {
  direction: INVALID_PROJECT_NAME_1SortOrder!
  field: INVALID_PROJECT_NAME_1GetUsersOrderByField!
}

input INVALID_PROJECT_NAME_1JsonFilter {
  array_contains: [JSON!]
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  mode: INVALID_PROJECT_NAME_1FilterJsonMode
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type INVALID_PROJECT_NAME_1PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

enum INVALID_PROJECT_NAME_1SortOrder {
  asc
  desc
}

input INVALID_PROJECT_NAME_1StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: INVALID_PROJECT_NAME_1FilterStringMode
  not: String
  notIn: [String!]
  startsWith: String
}

type INVALID_PROJECT_NAME_1User {
  name: String!
}

type INVALID_PROJECT_NAME_1UserConnection {
  edges: [INVALID_PROJECT_NAME_1UserEdge!]!
  pageInfo: INVALID_PROJECT_NAME_1PageInfo!
  totalCount: Int!
}

type INVALID_PROJECT_NAME_1UserEdge {
  cursor: String!
  node: INVALID_PROJECT_NAME_1UserNode!
}

type INVALID_PROJECT_NAME_1UserFlat {
  name: String!
}

type INVALID_PROJECT_NAME_1UserFlatConnection {
  edges: [INVALID_PROJECT_NAME_1UserFlatEdge!]!
  pageInfo: INVALID_PROJECT_NAME_1PageInfo!
  totalCount: Int!
}

type INVALID_PROJECT_NAME_1UserFlatEdge {
  cursor: String!
  node: INVALID_PROJECT_NAME_1UserFlat!
}

type INVALID_PROJECT_NAME_1UserNode {
  createdAt: DateTime!
  createdId: String!
  data: INVALID_PROJECT_NAME_1User!
  id: String!
  json: JSON!
  publishedAt: DateTime!
  updatedAt: DateTime!
  versionId: String!
}

input INVALID_PROJECT_NAME_1UsersWhereInput {
  AND: [INVALID_PROJECT_NAME_1UsersWhereInput!]
  NOT: [INVALID_PROJECT_NAME_1UsersWhereInput!]
  OR: [INVALID_PROJECT_NAME_1UsersWhereInput!]
  createdAt: INVALID_PROJECT_NAME_1DateTimeFilter
  createdId: INVALID_PROJECT_NAME_1StringFilter
  data: INVALID_PROJECT_NAME_1JsonFilter
  id: INVALID_PROJECT_NAME_1StringFilter
  publishedAt: INVALID_PROJECT_NAME_1DateTimeFilter
  readonly: INVALID_PROJECT_NAME_1BoolFilter
  updatedAt: INVALID_PROJECT_NAME_1DateTimeFilter
  versionId: INVALID_PROJECT_NAME_1StringFilter
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Query {
  user(id: String!): INVALID_PROJECT_NAME_1UserNode!
  userFlat(id: String!): INVALID_PROJECT_NAME_1UserFlat!
  users(data: INVALID_PROJECT_NAME_1GetUsersInput): INVALID_PROJECT_NAME_1UserConnection!
  usersFlat(data: INVALID_PROJECT_NAME_1GetUsersInput): INVALID_PROJECT_NAME_1UserFlatConnection!
}